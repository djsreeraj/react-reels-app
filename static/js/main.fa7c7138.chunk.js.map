{"version":3,"sources":["components/VideoFooter.js","components/VideoHeader.js","components/VideoCard.js","firebase/firebase.js","firebase/firebaseConfig.js","App.js","reportWebVitals.js","index.js"],"names":["VideoFooter","channel","avatarSrc","song","likeCount","shareCount","className","Avatar","alt","src","Button","mode","index","VideoHeader","VideoCard","id","url","useState","isPlaying","setIsPlaying","videoRef","useRef","useEffect","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","current","play","pause","rootMargin","threshold","observe","ref","onClick","volume","loop","db","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","reels","setReels","collection","onSnapshot","snapshot","docs","map","doc","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa7c7138.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./VideoFooter.css\";\r\nimport Ticker from \"react-ticker\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\n\r\nimport MusicNoteIcon from \"@material-ui/icons/MusicNote\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ModeCommentIcon from \"@material-ui/icons/ModeComment\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n\r\nexport default function VideoFooter({\r\n  channel,\r\n  avatarSrc,\r\n  song,\r\n  likeCount,\r\n  shareCount,\r\n}) {\r\n  return (\r\n    <div className=\"videoFooter\">\r\n      <div className=\"videoFooter__text\">\r\n        <Avatar alt=\"Remy Sharp\" src={avatarSrc} />\r\n        <h3>\r\n          {\" \"}\r\n          {channel} â€¢ <Button> FOLLOW </Button>{\" \"}\r\n        </h3>\r\n      </div>\r\n\r\n      <div className=\"videoFooter__ticker\">\r\n        <MusicNoteIcon className=\"videoFooter__icon\" />\r\n\r\n        <Ticker mode=\"smooth\">\r\n          {({ index }) => (\r\n            <>\r\n              <h1> {song}</h1>\r\n            </>\r\n          )}\r\n        </Ticker>\r\n      </div>\r\n\r\n      <div className=\"videoFooter__actions\">\r\n        <div className=\"videoFooter__actionsLeft\">\r\n          <HomeIcon />\r\n          <SendIcon />\r\n          <MoreHorizIcon />\r\n        </div>\r\n\r\n        <div className=\"videoFooter__actionsRight\">\r\n          <div className=\"videoFooter__stat\">\r\n            <FavoriteIcon />\r\n            <p>{likeCount}</p>\r\n          </div>\r\n\r\n          <div className=\"videoFooter__stat\">\r\n            <ModeCommentIcon />\r\n            <p>{shareCount}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport './VideoHeader.css'\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\r\nexport default function VideoHeader() {\r\n    return (\r\n        <div className=\"videoHeader\">\r\n            <ArrowBackIosIcon />\r\n            <h3> Reels </h3>\r\n            <CameraAltIcon />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./VideoCard.css\";\r\nimport VideoFooter from \"./VideoFooter\";\r\nimport VideoHeader from \"./VideoHeader\";\r\n\r\nexport default function VideoCard({\r\n  id,\r\n  channel,\r\n  avatarSrc,\r\n  url,\r\n  song,\r\n  likeCount,\r\n  shareCount,\r\n}) {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const videoRef = useRef(null);\r\n\r\n  //onscroll pause n play handle\r\n  useEffect(() => {\r\n    let options = {\r\n      rootMargin: \"0px\",\r\n      threshold: [0.25, 0.75],\r\n    };\r\n    let handlePlay = (entries, observer) => {\r\n      entries.forEach((entry) => {\r\n        if (entry.isIntersecting) {\r\n          videoRef.current.play();\r\n        } else {\r\n          videoRef.current.pause();\r\n        }\r\n      });\r\n    };\r\n    let observer = new IntersectionObserver(handlePlay, options);\r\n    observer.observe(videoRef.current);\r\n  });\r\n\r\n  const onVideoPress = () => {\r\n    if (isPlaying) {\r\n      //videoRef.current.pause();\r\n      videoRef.current.volume = 0.0;\r\n      setIsPlaying(false);\r\n    } else {\r\n      // videoRef.current.play();\r\n      videoRef.current.volume = 1.0;\r\n      setIsPlaying(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"videoCard\">\r\n      <VideoHeader />\r\n      <video\r\n        key={id}\r\n        ref={videoRef}\r\n        onClick={onVideoPress}\r\n        className=\"videoCard__player\"\r\n        src={url}\r\n        alt=\"IG reels video\"\r\n        loop\r\n      />\r\n\r\n      <VideoFooter\r\n        channel={channel}\r\n        avatarSrc={avatarSrc}\r\n        url={url}\r\n        song={song}\r\n        likeCount={likeCount}\r\n        shareCount={shareCount}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import firebase from \"firebase\";\r\nimport { firebaseConfig } from \"./firebaseConfig\";\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nexport default db;\r\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nexport const firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n  authDomain: \"ig-ree.firebaseapp.com\",\r\n  projectId: \"ig-ree\",\r\n  storageBucket: \"ig-ree.appspot.com\",\r\n  messagingSenderId: \"145323443346\",\r\n  appId: \"1:145323443346:web:ae395accaf2a118c8c524b\",\r\n  measurementId: \"G-R8LJHNHFQR\",\r\n};\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport VideoCard from \"./components/VideoCard\";\nimport db from \"./firebase/firebase\";\n\nfunction App() {\n  const [reels, setReels] = useState([]);\n\n  useEffect(() => {\n    // App component will run once when it loads\n    db.collection(\"reels\").onSnapshot((snapshot) =>\n      setReels(snapshot.docs.map((doc) => doc.data()))\n    );\n  }, []);\n\n  return (\n    //BEM naming convention\n    <div className=\"app\">\n      <div className=\"app__top\">\n        <img\n          className=\"app__logo\"\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e7/Instagram_logo_2016.svg/768px-Instagram_logo_2016.svg.png\"\n          alt=\"ig reels\"\n        />\n\n        <h1> Insta_Reels</h1>\n      </div>\n\n      <div className=\"app__videos\">\n        {reels.map(\n          ({ channel, avatarSrc, url, song, likeCount, shareCount, id }) => (\n            <VideoCard\n              id={id}\n              channel={channel}\n              avatarSrc={avatarSrc}\n              song={song}\n              url={url}\n              likeCount={likeCount}\n              shareCount={shareCount}\n            />\n          )\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}